:root {
  --primary: #ffffff;
  --secondary: #e71d36;
  --accent: rgb(36, 76, 255);
  --light: #FDFFFC;
  --dark: #010303;
  --grey-600:#323232;
  --grey: #282828;

  --h1: 3.5em;
  --h2: 2.6em;
  --h3: 2.2em;
  --h4: 1.8em;
  --h5: 1.4em;
  --h6: 1.2em;

  --size0: 8px;
  --size1: 16px;
  --size2: 24px;
  --size3: 32px;
  --size4: 48px;
  --size5: 64px;
  
  --height-height: 50px;
  --height-body: calc(100vh - 50px);
  --content-width: 1600px;
  --rows: 9;
  --width: 1224px;
  --row-gap: 0px;
  /* --row-size: 64px; */
  --row-size: 1fr;
  --column-gap: 0px;
  --grid-width: 1224px;
  --column-count: 12;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  outline: none;
  font-family: 'Montserrat', sans-serif;
  color: #222;
  font-size: 16px;
  border: none;
  scroll-behavior: smooth;
}

*::before, *::after {
  box-sizing: border-box;
}

*::selection {
  background: #222;
  color: #fcfcfc;
}

*::-webkit-scrollbar {
  display: none;
}

.Open_sans {
  font-family: 'Open Sans', sans-serif;
}

.Roboto {
  font-family: 'Roboto', sans-serif;
}

.Barlow {
  font-family: 'Barlow', sans-serif;
}

.Comfortaa {
  font-family: 'Comfortaa', sans-serif;
}

a, li {
  position: relative;
  text-decoration: none;
  color: inherit;
  font-size: inherit;
  font-weight: inherit;
  font-family: inherit;
  list-style: none;
}

p, a, h1, h2, h3, h4, h5, h6, i, span, div, b, text, font, ya-tr-span {
  color: inherit;
  font-weight: inherit;
  font-family: inherit;
}

i, font, ya-tr-span {
  font-size: inherit;
}

/* h1, h2, h3, h4, h5, h6 {
  font-weight: 500;
} */

h1 {
  font-size: var(--h1);
}

h2 {
  font-size: var(--h2);
}

h3 {
  font-size: var(--h3);
}

h4 {
  font-size: var(--h4);
}

h5 {
  font-size: var(--h5);
}

h6 {
  font-size: var(--h6);
}

b {
  font-weight: 600;
}

a::after {
  position: absolute;
  bottom: -2px;
  left: 0;
  display: block;
  content: "";
  width: 0;
  height: 1px;
  background: var(--grey);
  transition: all 0.2s ease-in-out;
}

a:hover::after {
  width: 100%;
}

a, button, .btn{
  cursor: pointer;
}

input, button {
  outline: none;
  box-sizing: border-box;
}

body {
  overflow: hidden;
  height: 100vh;
  width: 100vw;
}

#body {
  height: var(--height-body);
  width: 100vw;
  overflow-y: scroll;
  overflow-x: hidden;
  z-index: 2;
  position: relative;
  top: 0;
  left: 0;
  transition: all 0.5s cubic-bezier(0.55, 0.055, 0.675, 0.19);
  padding: 0;
  margin: 0;
}

.page {
  height: var(--height-body);
  position: relative;
}

.page, .back {
  background: #fcfcfc;
  width: 100vw;
}

.page .content *::selection, .back .content *::selection {
  background: #222;
  color: #fdfffc;
}

.page .content, .footer .content, .back .content {
  width: auto;
  max-width: 1024px;
  height: 100%;
  margin: auto;
  position: relative;
}

.logo {
  cursor: default;
}

.flex{
  display: flex;
}

.to_center {
  align-items: center;
  justify-content: center;
}

/* IMPORTANT */

.transparent {
  background: transparent!important;
}

.width_1024 {
  width: 1024px!important;
}

/* START */

header {
  height: var(--height-height);
  display: flex;
  justify-content: flex-end!important;
  padding: 0 2vw;
  max-width: var(--width, 1200);
  margin: 0 auto;
}

nav li a {
  margin: 0 1vw;
}
button{
  width: auto;
  height: auto;
  padding: 14px 32px;
  border-radius: 32px;
  font-weight: bold;
  line-height: 23px;
  font-family: 'DM Sans', sans-serif;
  font-size: 14px;
}
button:hover{
  opacity: 0.8;
}

[grid], .grid {
  position: relative;
  display: grid;
  grid-area: 1/1/-1/-1;
  grid-template-rows: repeat(var(--rows), var(--row-size));
  /* grid-template-rows: repeat(var(--rows), 1fr); */
  grid-template-columns: calc((var(--container-width) - var(--content-width))/2) 1fr repeat(var(--column-count), minmax(0, var(--column-width))) 1fr calc((var(--container-width) - var(--content-width))/2);
  grid-auto-rows: var(--row-size);
  width: 100%;
  padding: var(--block-padding);
  margin: auto;
  row-gap: var(--row-gap);
  column-gap: var(--column-gap);
  --column-gap-count: calc(var(--column-count) - 1);
  --column-width: calc((var(--grid-width) - var(--column-gap-count)*var(--column-gap))/var(--column-count));
  --container-width: 100%;
}

[block], .grid_item {
  position: relative;
  grid-area: var(--position);
  overflow: hidden;
}

/* .hello{
  
} */
.font_700{
  font-weight: 700;
}
.text_center{
  text-align: center;
}
@supports not (aspect-ratio: 1/1){
  img{
    height: 90%;
  }
}